#!/bin/bash

A=95
while ls /etc/udev/rules.d/$A* 1> /dev/null 2>&1 && (( $A > 0 )) && ! [[ -e  "/etc/udev/rules.d/$a-pyboard.rules" ]]
do
A=$(( $A-1 ))
done

[[ $A ]] || {
	echo 'Could not find free number for new udev rule file. Consider adding the rules to an existing file.'
	exit 1
}

if [[ $EUID -ne 0 ]]; then
	COM=sudo
else
	COM=''
fi

{
${COM} sh -c "cat > /etc/udev/rules.d/$A-pyboard.rules" <<EOF
# f055:9800, 9801, 9802 MicroPython pyboard
ATTRS{idVendor}=="f055", ENV{ID_MM_DEVICE_IGNORE}="1"
ATTRS{idVendor}=="f055", ENV{MTP_NO_PROBE}="1"
SUBSYSTEMS=="usb", ATTRS{idVendor}=="f055", MODE="0666"
KERNELS=="ttyACM*", ATTRS{idVendor}=="f055", MODE="0666"
SYSFS{idVendor}=="f055", ENV{ID_MM_DEVICE_IGNORE}="1"
SYSFS{idVendor}=="f055", ENV{MTP_NO_PROBE}="1"
SUBSYSTEMS=="usb", SYSFS{idVendor}=="f055", MODE="0666"
KERNELS=="ttyACM*", SYSFS{idVendor}=="f055", MODE="0666"
EOF
} && echo "Rules were written to /etc/udev/rules.d/$A-pyboard.rules" || exit -1

${COM} udevadm control --reload-rules 1> /dev/null 2>&1 || ${COM} udevcontrol reload_rules || {
echo "Could not reload rules."; exit 1
}

echo "Unplug and replug your device to activate the new rules. If this does not give you the right permissions, the new rules might be overridden by an other rule. In this case you can try to add the rules to a .rules file starting with a higher number."
